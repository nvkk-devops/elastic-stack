input {
  file {
    path => "/var/log/kern.log"
    start_position => "beginning"
    #Uncomment the following line to force logstash to reingest file
    #sincedb_path => "/dev/null"
  }
}

filter {
  if [type] == "syslog" {
      # match log row 'message' to Grok filter pattern
      # refer 'https://grokdebug.herokuapp.com/'
      # https://grokconstructor.appspot.com/
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" 
        }
    }

    # apply grok plugin to structure the data 
    grok {
      match => {
        "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} New Users created: %{GREEDYDATA:users}"
      }
    }
    # apply split on 'users' field out from 'grok'
    mutate {
      split => {
        "users" => ","
      }
    }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}

